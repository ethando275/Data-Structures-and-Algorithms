

netid => ed8205
assignment => Kd_Tree
file01 => @/n/fs/tigerfile/Files/COS226_S2023/Kd_Tree/submissions/cd1c0c5d92190236d3f1a7710e4221ef/readme.txt;filename=20230327103436/readme.txt
file02 => @/n/fs/tigerfile/Files/COS226_S2023/Kd_Tree/submissions/cd1c0c5d92190236d3f1a7710e4221ef/PointST.java;filename=20230327191401/PointST.java
file03 => @/n/fs/tigerfile/Files/COS226_S2023/Kd_Tree/submissions/cd1c0c5d92190236d3f1a7710e4221ef/KdTreeST.java;filename=20230327203909/KdTreeST.java
NOTE: Process generated too much output (output truncated)


The following files were submitted:
----------------------------------
 9.9K Mar 27 20:39 KdTreeST.java
 4.5K Mar 27 19:14 PointST.java
 3.7K Mar 27 10:34 readme.txt


*** The acknowledgments.txt file has NOT been submitted.***
*** This assessment will NOT be graded until the acknowledgments.txt file is submitted.***


********************************************************************************
*  COMPILING                                                                    
********************************************************************************


% javac PointST.java
*-----------------------------------------------------------

% javac KdTreeST.java
*-----------------------------------------------------------


================================================================


Checking the APIs of your programs.
*-----------------------------------------------------------
PointST:

KdTreeST:

================================================================


********************************************************************************
*  CHECKING STYLE AND COMMON BUG PATTERNS                                       
********************************************************************************


% spotbugs *.class
*-----------------------------------------------------------
M C NP_NULL_ON_SOME_PATH NP: Dereferences the variable 'current', but its value might be null on some execution branch.  Dereferenced at KdTreeST.java:[line 92]
M D RV_RETURN_VALUE_IGNORED_NO_SIDE_EFFECT RV: Calls the method 'distanceSquaredTo()' but ignores its return value. The method, however, does not produce any effect other than returning a value.  At KdTreeST.java:[line 211]
SpotBugs ends with 2 warnings.


================================================================


% pmd .
*-----------------------------------------------------------


================================================================


% checkstyle *.java
*-----------------------------------------------------------
[WARN] KdTreeST.java:259:32: Use at least one digit to the left of the decimal point. For example, use the literal '0.5' instead of '.5'. [FloatingPointLiteral]
[WARN] KdTreeST.java:260:32: Use at least one digit to the left of the decimal point. For example, use the literal '0.5' instead of '.5'. [FloatingPointLiteral]
[WARN] KdTreeST.java:260:37: Use at least one digit to the left of the decimal point. For example, use the literal '0.5' instead of '.5'. [FloatingPointLiteral]
[WARN] KdTreeST.java:262:35: Use at least one digit to the left of the decimal point. For example, use the literal '0.5' instead of '.5'. [FloatingPointLiteral]
[WARN] KdTreeST.java:263:32: Use at least one digit to the left of the decimal point. For example, use the literal '0.5' instead of '.5'. [FloatingPointLiteral]
[WARN] KdTreeST.java:263:36: Use at least one digit to the left of the decimal point. For example, use the literal '0.5' instead of '.5'. [FloatingPointLiteral]
[WARN] KdTreeST.java:269:72: Use at least one digit to the left of the decimal point. For example, use the literal '0.5' instead of '.5'. [FloatingPointLiteral]
[WARN] KdTreeST.java:270:64: Use at least one digit to the left of the decimal point. For example, use the literal '0.5' instead of '.5'. [FloatingPointLiteral]
[WARN] KdTreeST.java:270:71: Use at least one digit to the left of the decimal point. For example, use the literal '0.5' instead of '.5'. [FloatingPointLiteral]
Checkstyle ends with 0 errors and 9 warnings.

% custom checkstyle checks for PointST.java
*-----------------------------------------------------------
Checkstyle ends with 1 errors.
[ERROR] PointST.java:70: Do not create more than one redâ€“black BST in this program. [Performance]
[WARN] PointST.java:70:54: Do not call 'RedBlackBST()' in 'range()'. Inserting n keys into an initially empty red-black BST takes n log n time. [Performance]
Checkstyle ends with 1 error and 1 warning.

% custom checkstyle checks for KdTreeST.java
*-----------------------------------------------------------

% custom checkstyle checks for readme.txt
*-----------------------------------------------------------


================================================================


********************************************************************************
*  TESTING CORRECTNESS
********************************************************************************

Testing correctness of PointST
*-----------------------------------------------------------
Running 16 total tests.

In the tests below, we consider two classes of points.
  * Distinct points: no two points have same x- and y-coordinates
  * General points:  no restrictions on the x- or y-coordinates of the points

A point in an m-by-m grid means that it is of the form (i/m, j/m),
where i and j are integers between 0 and m (inclusive).

Test 1a: insert n random distinct points; check size() and isEmpty() after each insertion
  * 2 random distinct points in a 1-by-1 grid
  * 64 random distinct points in a 8-by-8 grid
  * 100 random distinct points in a 16-by-16 grid
  * 1000 random distinct points in a 128-by-128 grid
  * 5000 random distinct points in a 1024-by-1024 grid
  * 50000 random distinct points in a 65536-by-65536 grid
==> passed

Test 1b: insert n random points; check size() and isEmpty() after each insertion
         (size may be less than n because of duplicates)
  * 5 random general points in a 1-by-1 grid
  * 50 random general points in a 8-by-8 grid
  * 100 random general points in a 16-by-16 grid
  * 1000 random general points in a 128-by-128 grid
  * 5000 random general points in a 1024-by-1024 grid
  * 50000 random general points in a 65536-by-65536 grid
==> passed

Test 2a: insert n random distinct points; check contains() with random query points
  * 2 random distinct points in a 1-by-1 grid
  * 10 random distinct points in a 4-by-4 grid
  * 20 random distinct points in a 8-by-8 grid
  * 10000 random distinct points in a 128-by-128 grid
  * 100000 random distinct points in a 1024-by-1024 grid
  * 100000 random distinct points in a 65536-by-65536 grid
==> passed

Test 2b: insert n random points; check contains() with random query points
  * 1 random general points in a 1-by-1 grid
  * 10 random general points in a 4-by-4 grid
  * 20 random general points in a 8-by-8 grid
  * 10000 random general points in a 128-by-128 grid
  * 100000 random general points in a 1024-by-1024 grid
  * 100000 random general points in a 65536-by-65536 grid
==> passed

Test 3a: insert random distinct points; check get() with random query points
  * 2 random distinct points in a 1-by-1 grid
  * 10 random distinct points in a 4-by-4 grid
  * 20 random distinct points in a 8-by-8 grid
  * 100 random distinct points in a 16-by-16 grid
  * 1000 random distinct points in a 64-by-64 grid
  * 10000 random distinct points in a 128-by-128 grid
==> passed

Test 3b: insert random points; check get() with random query points
  * 2 random general points in a 1-by-1 grid
  * 10 random general points in a 4-by-4 grid
  * 20 random general points in a 8-by-8 grid
  * 100 random general points in a 16-by-16 grid
  * 1000 random general points in a 64-by-64 grid
  * 10000 random general points in a 128-by-128 grid
==> passed

Test 4a: insert random distinct points; check nearest() with random query points
  * 10 random distinct points in a 4-by-4 grid
  * 15 random distinct points in a 8-by-8 grid
  * 20 random distinct points in a 16-by-16 grid
  * 100 random distinct points in a 32-by-32 grid
  * 10000 random distinct points in a 65536-by-65536 grid
==> passed

Test 4b: insert random points; check nearest() with random query points
  * 10 random general points in a 4-by-4 grid
  * 15 random general points in a 8-by-8 grid
  * 20 random general points in a 16-by-16 grid
  * 100 random general points in a 32-by-32 grid
  * 10000 random general points in a 65536-by-65536 grid
==> passed

Test 5a: insert n random distinct points and call points()
  * 1 random distinct points in a 1-by-1 grid
  * 10 random distinct points in a 4-by-4 grid
  * 20 random distinct points in a 8-by-8 grid
  * 100 random distinct points in a 16-by-16 grid
  * 1000 random distinct points in a 128-by-128 grid
  * 1000 random distinct points in a 1024-by-1024 grid
==> passed

Test 5b: insert n random points and call points()
  * 5 random general points in a 1-by-1 grid
  * 10 random general points in a 4-by-4 grid
  * 20 random general points in a 8-by-8 grid
  * 1000 random general points in a 16-by-16 grid
  * 1000 random general points in a 128-by-128 grid
  * 1000 random general points in a 1024-by-1024 grid
==> passed

Test 6a: insert random distinct points; check range() with random query rectangles
  * 2 random distinct points and random rectangles in a 2-by-2 grid
  * 10 random distinct points and random rectangles in a 4-by-4 grid
  * 20 random distinct points and random rectangles in a 8-by-8 grid
  * 100 random distinct points and random rectangles in a 16-by-16 grid
  * 1000 random distinct points and random rectangles in a 64-by-64 grid
  * 10000 random distinct points and random rectangles in a 128-by-128 grid
==> passed

Test 6b: insert random points; check range() with random query rectangles
  * 2 random general points and random rectangles in a 2-by-2 grid
  * 10 random general points and random rectangles in a 4-by-4 grid
  * 20 random general points and random rectangles in a 8-by-8 grid
  * 100 random general points and random rectangles in a 16-by-16 grid
  * 1000 random general points and random rectangles in a 64-by-64 grid
  * 10000 random general points and random rectangles in a 128-by-128 grid
==> passed

Test 7: check with no points
 * size() and isEmpty()
 * points()
 * contains()
 * get()
 * nearest()
 * range()
==> passed

Test 8: call methods with null arguments
  * either argument to put() is null
  * argument to get() is null
  * argument to contains() is null
  * argument to range() is null
  * argument to nearest() is null
==> passed

Test 9: check intermixed sequence of calls to put(), isEmpty(), size(),
        get(), contains(), range(), nearest(), and points() with
        probabilities (p1, p2, p3, p4, p5, p6, p7, p8), respectively
  * 10000 calls with random points in a 1-by-1 grid
    and probabilities (0.3, 0.05, 0.05, 0.05, 0.1, 0.2, 0.2, 0.05)
  * 10000 calls with random points in a 16-by-16 grid
    and probabilities (0.3, 0.05, 0.05, 0.05, 0.1, 0.2, 0.2, 0.05)
  * 10000 calls with random points in a 128-by-128 grid
    and probabilities (0.3, 0.05, 0.05, 0.05, 0.1, 0.2, 0.2, 0.05)
  * 10000 calls with random points in a 1024-by-1024 grid
    and probabilities (0.3, 0.05, 0.05, 0.05, 0.1, 0.2, 0.2, 0.05)
  * 10000 calls with random points in a 8192-by-8192 grid
    and probabilities (0.3, 0.05, 0.05, 0.05, 0.1, 0.2, 0.2, 0.05)
  * 10000 calls with random points in a 65536-by-65536 grid
    and probabilities (0.3, 0.05, 0.05, 0.05, 0.1, 0.2, 0.2, 0.05)
==> passed

Test 10: check that two PointST objects can be created at the same time
==> passed


Total: 16/16 tests passed!


================================================================
Testing correctness of KdTreeST
*-----------------------------------------------------------
Running 36 total tests.

In the tests below, we consider three classes of points and rectangles.

  * Non-degenerate points: no two points (or rectangles) share either an
                           x-coordinate or a y-coordinate

  * Distinct points:       no two points (or rectangles) share both an
                           x-coordinate and a y-coordinate

  * General points:        no restrictions on the x-coordinates or y-coordinates
                           of the points (or rectangles)

A point in an m-by-m grid means that it is of the form (i/m, j/m),
where i and j are integers between 0 and m (inclusive).

Test 1a: insert points from file; check size() and isEmpty() after each insertion
  * input0.txt
  * input1.txt
  * input5.txt
  * input10.txt
  * input25.txt
  * input50.txt
==> passed

Test 1b: insert non-degenerate points; check size() and isEmpty() after each insertion
  * 1 random non-degenerate points in a 1-by-1 grid
  * 5 random non-degenerate points in a 8-by-8 grid
  * 10 random non-degenerate points in a 16-by-16 grid
  * 50 random non-degenerate points in a 128-by-128 grid
  * 500 random non-degenerate points in a 1024-by-1024 grid
  * 50000 random non-degenerate points in a 65536-by-65536 grid
==> passed

Test 1c: insert distinct points; check size() and isEmpty() after each insertion
  * 1 random distinct points in a 1-by-1 grid
  * 10 random distinct points in a 8-by-8 grid
  * 20 random distinct points in a 16-by-16 grid
  * 10000 random distinct points in a 128-by-128 grid
  * 100000 random distinct points in a 1024-by-1024 grid
  * 100000 random distinct points in a 65536-by-65536 grid
==> passed

Test 1d: insert general points; check size() and isEmpty() after each insertion
  * 5 random general points in a 1-by-1 grid
  * 10 random general points in a 4-by-4 grid
  * 50 random general points in a 8-by-8 grid
  * 100000 random general points in a 16-by-16 grid
  * 100000 random general points in a 128-by-128 grid
  * 100000 random general points in a 1024-by-1024 grid
==> passed

Test 2a: insert points from file; check points()
  * input1.txt
  * input5.txt
  * input10.txt
==> passed

Test 2b: insert non-degenerate points; check points()
  * 1 random non-degenerate points in a 1-by-1 grid
  * 5 random non-degenerate points in a 8-by-8 grid
  * 10 random non-degenerate points in a 16-by-16 grid
  * 50 random non-degenerate points in a 128-by-128 grid
  * 500 random non-degenerate points in a 1024-by-1024 grid
  * 1000 random non-degenerate points in a 65536-by-65536 grid
==> passed

Test 2c: insert distinct points; check points()
  * 1 random distinct points in a 1-by-1 grid
  * 10 random distinct points in a 8-by-8 grid
  * 20 random distinct points in a 16-by-16 grid
  * 1000 random distinct points in a 128-by-128 grid
  * 1000 random distinct points in a 1024-by-1024 grid
  * 1000 random distinct points in a 65536-by-65536 grid
==> passed

Test 2d: insert general points; check points()
  * 5 random general points in a 1-by-1 grid
  * 10 random general points in a 4-by-4 grid
  * 20 random general points in a 8-by-8 grid
  * 1000 random general points in a 16-by-16 grid
  * 1000 random general points in a 128-by-128 grid
  * 1000 random general points in a 1024-by-1024 grid
==> passed

Test 3a: insert points from file; check contains() with random query points
  * input1.txt
  * input5.txt
  * input10.txt
==> passed

Test 3b: insert non-degenerate points; check contains() with random query points
  * 1 random non-degenerate points in a 1-by-1 grid
  * 5 random non-degenerate points in a 8-by-8 grid
  * 10 random non-degenerate points in a 16-by-16 grid
  * 20 random non-degenerate points in a 32-by-32 grid
  * 500 random non-degenerate points in a 1024-by-1024 grid
  * 10000 random non-degenerate points in a 65536-by-65536 grid
==> passed

Test 3c: insert distinct points; check contains() with random query points
  * 1 random distinct points in a 1-by-1 grid
  * 10 random distinct points in a 4-by-4 grid
  * 20 random distinct points in a 8-by-8 grid
  * 10000 random distinct points in a 128-by-128 grid
  * 100000 random distinct points in a 1024-by-1024 grid
  * 100000 random distinct points in a 65536-by-65536 grid
==> passed

Test 3d: insert general points; check contains() with random query points
  * 10000 random general points in a 1-by-1 grid
  * 10000 random general points in a 16-by-16 grid
  * 10000 random general points in a 128-by-128 grid
  * 10000 random general points in a 1024-by-1024 grid
==> passed

Test 4a: insert points from file; check get() with random query points
  * input1.txt
  * input5.txt
  * input10.txt
==> passed

Test 4b: insert non-degenerate points; check get() with random query points
  * 1 random non-degenerate points in a 1-by-1 grid
  * 5 random non-degenerate points in a 8-by-8 grid
  * 10 random non-degenerate points in a 16-by-16 grid
  * 20 random non-degenerate points in a 32-by-32 grid
  * 500 random non-degenerate points in a 1024-by-1024 grid
  * 10000 random non-degenerate points in a 65536-by-65536 grid
==> passed

Test 4c: insert distinct points; check get() with random query points
  * 2 random distinct points in a 1-by-1 grid
  * 10 random distinct points in a 4-by-4 grid
  * 20 random distinct points in a 8-by-8 grid
  * 100 random distinct points in a 16-by-16 grid
  * 1000 random distinct points in a 64-by-64 grid
  * 10000 random distinct points in a 128-by-128 grid
==> passed

Test 4d: insert general points; check get() with random query points
  * 10000 random general points in a 1-by-1 grid
  * 10000 random general points in a 16-by-16 grid
  * 10000 random general points in a 128-by-128 grid
  * 10000 random general points in a 1024-by-1024 grid
==> passed

Test 5a: insert points from file; check range() with random query rectangles
  * input1.txt
A  * input5.txt
ABCDE  * input10.txt
ACDEFBGJHI==> passed

Test 5b: insert non-degenerate points; check range() with random query rectangles
  * 1 random non-degenerate points and random rectangles in a 2-by-2 grid
A  * 5 random non-degenerate points and random rectangles in a 8-by-8 grid
ABCDE  * 10 random non-degenerate points and random rectangles in a 16-by-16 grid
ACDBFEGHI  * 20 random non-degenerate points and random rectangles in a 32-by-32 grid
ACBDFGKLSNOQHIE  * 500 random non-degenerate points and random rectangles in a 1024-by-1024 grid
ACESFGHLMZFJAPOWQXBBBDVJNSLWNPNYFEEMIVHIJB  * 10000 random non-degenerate points and random rectangles in a 65536-by-65536 grid
ABCFIVJJMBRBYPRCMLPFXJNZIJEZLKSBSAUAODDFAHDUVBPLFLVCBJWWBRMSAKRXJUXHVDASVXRFLTYOOLNZIBFMILICDMEEANNAIXVDJAQUATGIBCBANAYMHPWQYJBULRRSTXTURRZUNNIEWLJDIWKLTERLYIMNEVXAYFGPOPCLITOOFDXMEMOPDZHOMUCUOCQPZDIFBFMBJLZSUGWVGOZQCCPRSSZLCAJVLYQLKSZCTDE==> passed

Test 5c: insert distinct points; check range() with random query rectangles
  * 2 random distinct points and random rectangles in a 2-by-2 grid
AB  * 10 random distinct points and random rectangles in a 4-by-4 grid
AFBCDEGH  * 20 random distinct points and random rectangles in a 8-by-8 grid
AJBCDLMEFOSHKTG  * 100 random distinct points and random rectangles in a 16-by-16 grid
AEBCFDOJKFLYNRWZPRXETJZOMOJLKNWMUAIXOQAH  * 1000 random distinct points and random rectangles in a 64-by-64 grid
ACBPQBSPNSZMLDOSRDFLSMFBBYFFDATNKW  * 10000 random distinct points and random rectangles in a 128-by-128 grid
AGNDOUCQBDKPSVNYFQIVXIOHLMKYSWNQVURGXIUQXXJAIJNUGUUTCQLLQUTGIPFFMFFKJSLXEJBLSGTCVAKOMGLHPQPTUOEVHTAAFQOZORZMDCAZYRSZATACLHQWLDXYXGIAPKMFLHNUVXCDRUQVWZVDSBPUSJCBUNYIBESAZFBZYKQJGNPXKLZGFBFBJPTKPYJVHETBDDGHIGUPRSJIHBCCWFRBLFLUCKMCEVDJTYGYBHMCOBKXQZMWXRJJKJVULMMJYLTZHLMBPXQYCFHJYYICFUALKSEBHLIMVAKNEJOYRNXQNPWBOUXGQEGLMSGJOCLGPHRWWRKVWMOKJNWYJKDXHBELYBIGKFRRAIMAYKWTSMDCVPRVTPPYRGCHSJSUBSIIYCCMJJAIYIQPJNYUZVBOCCMRVKSWYLTFWEFODYLRDVKFACKMLMTWAMFUEAAPXMOVCZNNIHRCKDKLHREHWXAKUWAPORAHYMNLOHLHFEWRYTLULMZXTMGAXZGOYJIBVDQESZDZTRFBBHVMDMBWWQVCAEOHYPSIDVSPESZVHIWQTEJXSPGWMSAAIQFVIRYGHWDXOKYLKIKTEXUTUMMJKJDKZZLQUHUQBANTTJQGFEWZVAOOVPSNVDMHILZEYHBHISWYDDPGFANQBVYJEPEBMMNEKDBLPDZUTCBZLDYRJZYLNPYWFLULBHKMMRGWWDFYAQPGUIYDNYYSYEUEEPXIITDWRWMELPNKINFGWDLSWINGHEDZURLKKLRAXDFKHDYNPITJRVHBTEQHNBHIGEMUTLIDNQTGEEPBYSGTTZIOFQHRAOTCTBEGYIPRVMVNYAIEBBNGEHSMDNDWWDDAMMJPZDTRNSIZRIEHZMBSQHYGUEVOVTMCHIIEMUDVYSHTZOWRTQILUVCQBUYOBBMMCDBRBVAUGBCEETYQKCSGDSPLAYIJYVAITHWLIYTKAKJMYZEJVRMGVOFUYWSBHLUDNXODUHLZZOYMKVZWIMXFTSQSTAWWSFQPQSFCPWJCCGCDCBQJLDRWUYLKKNSNWKQDQLNNJUYCVKIAVCRVWXMKBVYFUXQPZMOYXORFPAYICOAROKSPHAFRKNKGMOGUPIUZVCXYPCCKZMPSVIQKLFNCWEBLWSTQPEAOPEFROFCWPBABGPMGAIDDYBTWUKLQDSSUKAXWHBMMPNJUDNWLPHDIFNBPKFRRYYCVJBYPPKTUAPMAEVHWRQZNHLBJFKRKJNXWBNSJAJDOSKSAFNEQURJCTBYUGJMXHYNMIHKARFVGBDJJXDJVJLPPRCDEHRVMETWJQNDTLCTVOVUIJQKSXCPQQMICDCSNANDHYCXSEBIPLHROHDQFGWHOKBSYQNOZRIMKACXLOCAOWFTEKFNTSKJAEWMDQHWGXMVHQPAKVEFFTNRWYHJQZJTDMRCMNTMZCQXHRVNVEDWKCDNTJIQVRJUWDWZDBKGYATVADZVVKANAAMIMWJRIDTBLARQRTLFTSBMRUARTGPYGQJEGYDKLXCKBCEPHZDMUMCPZCDLBLIEZLXHQCYGXSAYSHGTXWIHUJNGLPRBEHDLSSTSIOTTMQNKOUHIXUSQVJSFJPLVOYICSRMEGGNZHVSWBIYHMOPCPXDIIGVHRVZWJEXLLZCLLBOQQKWZLMKTRHIDILVVUPSQTNQWTAJQYBJXZUXUHJBSEMUGQSPBWDNPARGDDFMYYEAOTLPXGFQUTWGSGWZPJRGWEVCVTKHSOZWFDHLVHDKIUIHWGWXOATVPRIUZMZPREQEYEDPDIAXOUXXUMRIQWNHSLIFJZKQAYAYSBZUTKJYPVVYFAJSDTAKZFCBNWMZWMWMQTLOSBLJBKRQMRAIZKHMBAPNTHZTDVIJCOPEZUOESRYVPOUIHLULZZBRGZXKAVHIYSMLPMHDFZCAYKZOBGYZKNGIRZATHOYPWPXYOWVPOVLUQUTSDWMLFYKSMQDXCOQNQAFAOYBMDWOQEHBNMKZLNNUDJYPEGBGTVPXGRRMIEDWMPLVQCDXRVXMJUQBJYOWLLMYQIZFAZPRDBLMUMZZTTJYUJHYLRNVIVSBPPLKGIIVSMESRJAFEWUYAYYTAXAEZPIBGPNDNIVRCWKAYVAJKKPCEICJGNZMZXEVLZBCMFUXSFQIJZMOJSHNYHVTPETWYVRKMMCQQTMCKSOCCYXQODMLLDLQDMRFZFRNWAAFPWSUFFROYWTUAQKXFOXOZFQGDDNFXQNQUBISANFSYUFMFOVBMNBLGXCTVSAINIBKJAGYLXIEOKHXERUZTEFDAAYUSASXRSUPGHCEZLRTRTQWXQESCUTNOSWYRWANRFGPPFUJWFYGHAQQNMZJLXACJWTCQZSLPGXBYEIPJNUQSIYDJQVQVQZEJLIONTWYIXLFKSOZKJFOFICGFIHOYEIYIKGELVMQGVRASKEMZJIMUBHPIKKSTQNWHZBEAVAKOVZEDJIZDMYWHBZQTSXTODZUNCEGVKSUFZKLZBTTZXSAINODBEJSIEMWYSUSFFWSHRZTHORAAHWHWKMSEVPMIQWXBTPDAZVSZYUQEIAYXLILLYZBTSXLPLXHTRYOTVPCGJXERXXVROPXQJWQGRQMCQRSHMNSJSJXYIVKIEBIFWJOZBJPQXPJMXFMXMMFUVOYOIHVNYSONEIAJFEHLFJBPHPVGOIJNDLRNQAXYHXVZXUXCFJDMKZLZOTMUZXEAUBGZOZBWNGFCKQDBQCPWZJUMGMMJSVXRIDSPJXEMRDJCOTGBZPUMIAFDPDOUWKLHYSHJCFZDXQRYQAWXEJIQPOYPAWPREQLQENYVLDJHWAYWTHQBFWDURPBQRHVMKZLMRUANGUCUCAKLLENUSOBRZTFGWDSPNHRYCPWKYJFBTQIWSUBZEDOOCTTSSJMHWLGGSCPAXSVPTRZVBWCKXHSSTROPJDDKRJOJOZRSKRASVNQSAHZYOOGKHCGDANBQTSIWFAEVITZRNXLBMTTENJONBNXTJGXPDTFCRXKBZQGEBCMPVWBJFEOJIGAPSXSKNXIGZVDXATISQJSPQESVINPHXKGCXTQMSWEWPTKZEMBATKEIZQKHAPERFUZXQVDSCLGDURTIISEYBVNBCJCVIIEMUNSYNUPVGFZTXBDGUILEFMOYLVDUYARPBVRVCGAQIKWINFMBOKEKZRTXRENDDBKOXUDBVKQWOQPEINGULRCWXULMPSOTDYQCCKFGNPPZBRGOGYBKBRPEOXBGQBIOWDVHFLUHBGBZCXUPATXOBOZACWFWCXOTSZQYXOZCXIANPTYQHSBGOVYEGKVJBAKRHHUHUGEHCCTDGOEJTNBHOVKJCAWTQUPDYUJLQDOWVCCIMRAFKUEKJEUMTEZZXEOIXUCDZRIWHMWVMECSFVAEZXQNUQNVYBMJSUKXGGBXGPWFCTVUYNYAGZSEHTHGWZGATZEPHUOYOILDANXIKOXOLEECUEDFWIAGOCWWQXEBRWGPLAQXIHGGRTDUEWTKLPYQSDIQTJEEJNUGKLDGEFFVHKSDUOJOMMOQPZMPDWEGDFLBZUGXAYLRHWFKEBDUNPLMPSUOVROQTVKQTXSFMWUWLSJYTYEXCJOHESPIEFDMDTXDYRQWBQTHDTESDJQZTFZOQHQPHLZEORPFHMEBYEHOSJRSEZKTSVFNRSAPJFTCTBFPVMBGTEKSBLRTWXALOIKSSOVWLNYNAATUAZNJHOZMOAHXJNXTRTFTTJFPNPLCFJSBOQMQFGAALIGXXUWSYCBETCXKGCHBTTBUJZVFOTJNMTLMEXLXTNJKBJIEZYRCCWWNLOLQOVXPNXZJFCOHKZMEBFFLTBSVJGNOOUGVBRAWHSKOIZVIMRQDCLCNLWYSLSNDTUDZTUJZYKPKAQBSSJSKUCFTEEZXBSCDAUIOQIDPVVBVZYVSAJKNSPEAPKJFVDHGKFDCJFHULABSRVXFHRHYTFQWWGNLVIKWAUHSCQPZCREXSGKIACZQCICANFAVHCONOFQGNSLQXUBHMCKNKVLRDTKTOJLZOZXZIHEEOJFGOQXJUOBRGWLNSYNLXYTYGWJEUFBYMFY==> passed

Test 5d: insert general points; check range() with random query rectangles
  * 5000 random general points and random rectangles in a 2-by-2 grid
BHFYUEMZG  * 5000 random general points and random rectangles in a 16-by-16 grid
YRUZRYRADBSHUHLMSZVPUGNVENEJFHXJWDMEXHOKLJVNYFSXHXHUJ  * 5000 random general points and random rectangles in a 128-by-128 grid
ICZLEHNRQSTVRWPCQRWOQEYNTVJQWGXIXEDKBSTYQHSBIOCTCDSJNUKCTTZZRZAOGWMNSHDDYVAOPETYSUFFOJNUTFVICKHKATNBDHCWKFUPSQLAKEBMBYVDCNCMUNTZELPHABHBECTXSPNFWVIEWAUMMNBCPDHTCXSUWTAQRUFHDZPTKQYCFTELCRFPLXBCXHBXANNQWIXCDTLGGKFRWRCRHGEGWWNGQAUIXJFVRFQHUWBVCKJBRUMBCOCCITOKEMIMOQQNBOYOYJOSBEJSCQLEIIWBHRSYEDMULUREJZPJXMHETIALYQLGARZYXCVOQWWZVILK  * 5000 random general points and random rectangles in a 1024-by-1024 grid
ABHCEKZFOPWGDIRBAOOJMMMFBUVEHRDTGWYRAMXVWTKKMSOFHSNFYXOULCDLJALPOOATNYSCZMGPOAANEXFWMVZURJUMKJDUSWSPBSLETGCTKCYFQQNYRLJCFXJXHNACQZPBKQCWNTOIPXEYSTJGRAOVFXVUNXYIEKLMHACVNOOIVXBXKOEIUTEVYPWVFMPQWYKCBUKHZEZRCVCQVDWEXNQMSOOUEJTPNOADUCLPMKYYLHCHROAIMGCDOWUEFLCDTPFMQWNOLKBUHYRQPLTKTJFFGZJPBDGCFAKOGKACCEMSAKIXKUEESJPBHPJXEFOMSCGWNYZMXDUHTZGHPROUGJSASFSDVBRPTDPLDEFDG==> passed

Test 5e: insert random points; check range() with tiny rectangles
         enclosing each point
  * 5 tiny rectangles and 5 general points in a 2-by-2 grid
ACDE  * 10 tiny rectangles and 10 general points in a 4-by-4 grid
ABCGIJF  * 20 tiny rectangles and 20 general points in a 8-by-8 grid
EGJKNTQPMCDHF  * 5000 tiny rectangles and 5000 general points in a 128-by-128 grid
AFGPVDPHZUQAZKPLSFWHBLIHCEXSQXXWXNMSZXUVLRD  * 5000 tiny rectangles and 5000 general points in a 1024-by-1024 grid
ABDCNFYKPLKMHOUAYSDHJRPMAZTBV  * 5000 tiny rectangles and 5000 general points in a 65536-by-65536 grid
ABCDGHCKQMPRTIDRLXPFXCRMEMQJANDVNPRYUPCK==> passed

Test 6a: insert points from file; check range() with random query rectangles
         and check traversal of k-d tree
  * input5.txt
ABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABEABCDEABEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABEABCDEABCDEABCDEABCDEABEABCDEABEABCDEABCDEABCDEABCDEABCDEABEABCDEABCDEABEABCDEABCDEABCDEABEABCDEABCDEABCDEABEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABEABEABCDEABCDEABCDEABEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABEABCDEABCDEABCDEABCDEABEABCDEABCDEABCDEABCDEABCDEABCDEABEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABEABCDEABCDEABCDEABCDEABCDEABCDEABEABCDEABEABEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABEABCDEABCDEABCDEABCDEABEABCDEABCDEABEABCDEABEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABEABCDEABCDEABEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABEABCDEABCDEABEABCDEABEABEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABEABCDEABCDEABCDEABCDEABCDEABCDEABEABCDEABCDEABCDEABCDEABEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABEABCDEABCDEABEABCDEABEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABEABCDEABCDEABCDEABCDEABEABCDEABCDEABCDEABCDEABEABCDEABCDEABEABCDEABCDEABEABEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABEABCDEABCDEABCDEABCDEABEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABEABCDEABCDEABCDEABEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABEABEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABEABCDEABCDEABCDEABCDEABCDEABEABCDEABCDEABEABCDEABCDEABCDEABEABEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABEABCDEABCDEABCDEABCDEABEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABEABCDEABCDEABCDEABCDEABCDEABEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABEABCDEABCDEABCDEABEABEABCDEABEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABEABCDEABEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDEABCDE  * input10.txt
ACDEFBGJHIACDEFBGJHIACDEFBGHIACDEFBGJHACDEFBGJHIACBGHIACBGHIACDEFBACBGHIACBGJHIACDEFBGJHIACDEFBGHIACBGJHIACBGJHIACDEFBGJHACBGJHACDEFBGJHIACDEFBGJHIACDEFBGHIACDEFBGJHIACDFBGHIACDFBGHIACBGJHIACDEFBGHIACDEFBGJHIACBGJHIACDEFBACDEFBGHIACDEFBACBGJHIACDEFBGJHIACBGJHIACDEFBGHIACBGJHACDEFBGHIACDEFBGJHACBGHIACDEFBGJHIACDFBGHIACBGJHIACDEFBGJHACDFBGHIACBGHIACDEFBACDEFBACBGJHIACDEFBGJHACBGJHACBGHIACBGJHIACBGHIACDEFBGJHIACBGJHIACDEFBGJHIACDEFBGHIACDEFBGJHIACDEFBGJHACDEFBGHIACDEFBACBGHIACDEFBGJHIACDEFBGJHIACDEFBGHIACBGHIACDFBGHIACBGHIACBGJHIACDEFBGJHACBGJHIACDEFBGJHIACDEFBGJHIACDEFBGJHIACDEFBGJHACBGJHIACBGHIACBGJHIACDFBACDEFBGHIACBGJHACDEFBACBGHIACDEFBACBGJHIACDEFBACDFBGHIACDEFBACBGHIACDEFBGHIACDEFBGJHIACDEFBGJHACDEFBGHIACBGJHIACBGJHACDFBGHIACBGJHACBGJHIACDEFBACBGJHIACBGJHIACBGHIACDEFBGJHIACDEFBGJHIACBGJHIACDEFBGJHIACDEFBGHIACDEFBGJHACBGJHACDEFBGJHIACDEFBACDEFBGJHIACDEFBGJHIACDEFBGJHIACDEFBACDFBGHIACDFBGHIACDEFBGJHIACDEFBGHIACBGJHIACDEFBGHIACDEFBGJHACDEFBGJHIACDEFBGJHIACDEFBACDEFBGJHIACDEFBACBGHIACDFBACDEFBGHIACDEFBACDEFBGJHIACBGJHACBGJHACDEFBGJHIACDEFBGJHIACBGJHACDEFBGJHIACDEFBACDEFBACDEFBGJHIACBGHIACDEFBGJHIACDEFBGJHIACDFBGHIACDEFBACBGJHIACDFBGHIACDFBGHIACBGHIACDFBGHIACDEFBGJHIACDEFBACDEFBACDEFBGJHIACBGJHIACDFBGHIACDEFBGJHACDEFBGHIACBGHIACDFBGHIACDEFBGJHIACDEFBACDEFBGJHIACBGJHIACDEFBGJHIACBGJHIACBGHIACBGHIACBGJHIACDFBGHIACBGHIACBGHIACBGJHIACBGJHIACDEFBGHIACDEFBACBGJHIACBGJHIACBGJHIACDEFBACDEFBACBGHIACBGHIACDEFBGHIACBGJHIACDFBGHIACDEFBGHIACBGHIACDFBGHIACBGJHIACBGHIACDFBGHIACDEFBGJHACDEFBGJHACDEFBGJHACDEFBACBGJHACDEFBGJHIACBGHIACDFBACDFBACBGJHIACDEFBGJHIACBGHIACDEFBGJHIACDEFBGJHIACBGJHIACBGJHACBGHIACBGJHIACDEFBGJHIACBGJHIACBGJHIACBGJHIACDEFBGJHACBGJHACDEFBACBGJHACBGJHIACDEFBACDEFBGJHACBGJHIACBGJHACDEFBGHIACDEFBGJHIACDEFBGJHIACBGJHIACBGJHIACBGHIACBGJHACDEFBGJHACDEFBACDEFBGJHIACDFBGHIACDEFBGJHACDEFBGJHACBGHIACDEFBGJHIACDEFBGJHIACDEFBGJHIACDEFBGJHIACDEFBGJHIACDEFBGJHIACDEFBACDEFBACBGJHACDEFBGJHIACBGJHACDEFBGJHACBGHIACDFBGHIACDEFBGJHACDFBGHIACBGJHIACDEFBGHIACDEFBACDEFBGJHIACDEFBGJHACDEFBACBGHIACBGHIACDFBGHIACDEFBGJHIACBGHIACDEFBGHIACBGJHIACDEFBACBGJHACBGHIACDFBACDEFBACDEFBGJHIACBGJHIACBGHIACDEFBGJHIACDEFBACDEFBGJHIACDEFBGJHIACBGJHIACDEFBGJHIACDEFBGJHACBGJHIACDFBGHIACBGJHIACDFBACDEFBGJHIACDEFBACBGJHIACDEFBGJHIACDEFBGHIACDEFBGJHIACBGJHACDEFBGJHACDEFBGHIACBGJHACBGHIACBGJHIACBGHIACDEFBACDFBACBGJHIACDEFBGHIACBGHIACDEFBGHIACBGJHIACDEFBGJHIACBGHIACDEFBACBGJHACDFBGHIACBGJHIACDEFBACDEFBGJHIACDEFBGJHACDEFBGJHIACDFBACBGHIACDEFBGJHIACDEFBGJHIACBGJHIACBGJHIACDEFBGJHIACDEFBACBGJHACBGJHIACDEFBGJHIACDEFBGJHACDEFBGJHACDEFBGJHIACBGJHIACDEFBGJHIACDEFBACBGJHIACBGHIACDEFBGJHIACDEFBGHIACBGJHIACBGJHIACDEFBACBGJHIACDEFBACDEFBACDEFBACDEFBACBGJHIACDEFBGJHIACDEFBGHIACBGJHACDEFBACDEFBGHIACDEFBACDEFBGJHIACBGJHIACDEFBACBGJHIACDEFBGJHIACDEFBGJHIACDEFBGJHIACBGJHACBGHIACBGJHIACDEFBACDEFBGJHACBGHIACDEFBGJHIACDEFBACBGJHIACDEFBGHIACBGJHIACDEFBGHIACDEFBGHIACBGHIACBGJHIACDEFBGJHIACDEFBGHIACDEFBGJHIACBGJHIACBGHIACBGJHACDFBGHIACBGJHIACDEFBGJHIACDEFBGJHACBGHIACDEFBGJHIACDEFBGJHIACDEFBGJHIACBGJHIACDEFBGJHACBGHIACBGJHIACBGJHIACDFBGHIACBGJHACBGJHACBGJHIACBGJHACDEFBGJHIACBGHIACBGJHACBGJHIACBGJHIACDEFBGJHIACBGHIACBGJHACDEFBGJHIACBGJHIACBGJHIACDEFBGJHACBGJHIACBGHIACBGJHIACDFBGHIACDEFBGJHIACDEFBACBGHIACDEFBGJHIACDEFBACBGHIACBGJHIACBGJHIACBGHIACDEFBGJHACBGJHIACBGHIACDEFBACBGJHIACBGJHIACDEFBGJHIACDEFBACDEFBACBGJHIACBGJHIACDEFBGJHIACDEFBGJHIACDEFBGHIACDEFBGJHIACBGJHIACBGJHACDEFBGJHIACDEFBGJHIACDEFBGJHACDEFBGHIACDEFBGJHIACDEFBACBGJHACDEFBGJHACDEFBGJHIACDEFBGJHIACDEFBACBGHIACDEFBACBGHIACBGJHACDEFBGJHACDEFBACDEFBGHIACDEFBGJHACBGHIACBGJHIACDEFBGJHIACDEFBGHIACBGJHIACDEFBGJHIACBGJHIACBGHIACBGHIACDEFBACBGHIACBGJHIACBGHIACDEFBGJHIACDEFBACDEFBGJHIACBGJHIACDEFBGJHIACBGJHACDEFBGJHIACDEFBGJHACBGJHIACBGHIACDFBGHIACDEFBGJHACDEFBACBGHIACDEFBGJHIACBGJHACBGHIACDEFBGJHIACDFBACDEFBGJHACDEFBGJHIACBGJHACBGHIACBGJHIACDFBACDEFBGJHIACBGJHIACBGHIACDEFBACBGJHIACDEFBACBGJHIACDEFBGJHIACDEFBGJHIACBGHIACBGJHACBGJHIACDEFBGHIACDEFBGJHIACDEFBACBGHIACDEFBACBGJHIACDEFBGJHIACDFBGHIACDEFBGHIACBGJHIACDFBGHIACBGHIACDEFBGHIACBGHIACDEFBACDFBGHIACDEFBGHIACDEFBACBGJHACDFBGHIACBGJHIACDEFBACDEFBGJHIACBGJHIACDEFBGHIACBGHIACBGHIACDFBACDEFBGJHACBGJHACBGJHACDEFBGHIACBGHIACBGJHIACDFBGHIACDFBGHIACDEFBGJHIACDEFBGJHIACBGJHIACDEFBACBGJHIACDEFBGHIACBGJHACDEFBGJHIACBGHIACBGHIACDEFBGJHACBGJHIACDEFBGJHACBGJHIACDEFBGJHIACBGJHACDEFBACDEFBGJHIACDEFBGJHIACDFBGHIACBGJHIACBGHIACBGJHIACBGJHIACBGHIACDEFBGJHIACDEFBGJHIACBGJHIACBGJHIACBGHIACDEFBGJHIACBGHIACDFBGHIACBGHIACBGJHIACDFBACBGJHIACBGJHIACBGJHACBGHIACDFBGHIACDEFBGJHACBGJHACDEFBGJHIACDFBGHIACDEFBGJHIACDFBGHIACDEFBGHIACDEFBGHIACDEFBGJHIACDEFBGJHIACBGJHIACDFBACBGJHACBGJHIACDFBACBGJHIACBGJHACDEFBGHIACBGJHIACDEFBGJHACDEFBACDEFBGHIACDEFBGHIACDEFBGHIACDEFBGJHACDEFBACDEFBGJHIACDEFBGHIACBGJHIACBGJHIACDEFBGJHIACBGJHIACDEFBGJHIACDEFBACBGJHIACDEFBGJHACBGJHIACDEFBGJHIACDEFBACDEFBGJHIACDEFBGJHIACDEFBGJHACDFBACDFBGHIACBGJHACDFBGHIACDFBGHIACBGJHACBGJHIACBGJHIACDEFBACBGJHIACDEFBGJHIACBGHIACDEFBGJHACDEFBGJHIACBGHIACDEFBGHIACDEFBGJHIACDEFBGJHACBGHIACDEFBGJHIACBGHIACDEFBGJHIACBGHIACBGHIACDEFBGJHIACDEFBGJHIACDEFBGJHACDFBACDEFBGJHIACDEFBGJHACDEFBGHIACBGHIACDEFBGJHIACDEFBGJHIACBGJHIACDEFBGJHIACDFBGHIACDEFBGHIACDEFBGJHACDEFBGJHIACDEFBGHIACBGHIACDFBGHIACDEFBGJHIACDFBGHIACDEFBACBGJHIACBGHIACBGJHIACBGJHIACBGJHIACDEFBGJHIACDEFBGHIACDEFBGJHIACDEFBGHIACDEFBACDFBGHIACDFBGHIACDEFBACDEFBGJHACDEFBACDFBGHIACBGJHIACBGHIACDFBACBGHIACDFBGHIACDEFBGJHIACBGHIACDFBGHIACBGJHACBGHIACDEFBGHIACDEFBGJHIACDEFBGJHIACDEFBGJHIACBGHIACBGJHIACDFBGHIACBGJHIACBGJHACBGJHIACBGJHIACDEFBGJHACDEFBGJHIACBGHIACDEFBGJHIACDEFBGJHIACDEFBACBGHIACBGJHACDFBGHIACDEFBACBGHIACDEFBGJHIACBGJHACBGJHACDEFBGHIACDEFBGJHIACDEFBACDEFBGJHIACBGHIACDEFBGJHIACBGJHIACBGJHIACBGHIACDEFBGJHACDFBGHIACDEFBGJHIACDFBGHIACDEFBACBGHIACDEFBACDEFBGJHIACDEFBACDFBGHIACDEFBGJHIACDEFBGJHIACDEFBGJHIACDEFBGJHIACBGHIACDEFBGJHIACDEFBGJHIACDEFBACDEFBGJHIACBGJHIACDEFBGHIACBGJHACDEFBGJHIACBGHIACDFBACBGJHACDEFBACDEFBGJHIACDEFBGJHIACBGJHIACDEFBACBGJHIACBGJHIACDEFBGJHIACDEFBGHIACBGJHACDFBGHIACDFBGHIACBGJHACDEFBGHIACBGJHIACDEFBGJHACBGHIACBGJHACDEFBGJHACDFBGHIACBGJHIACBGJHIACBGJHACDEFBACDEFBGJHIACBGJHIACDEFBGJHIACDFBGHIACDEFBGJHACDEFBGJHACBGJHIACDEFBGJHIACDEFBGJHIACDEFBACBGHIACDEFBGJHIACBGHIACDEFBGJHIACDEFBACBGJHIACBGJHIACDEFBGJHIACBGJHIACDEFBGJHIACBGJHIACDEFBGJHACBGJHIACBGJHACDEFBGHIACDEFBGHIACBGHIACBGJHACBGJHIACDEFBACDEFBGJHIACBGJHIACDEFBGHIACDEFBGHIACDEFBGJHACDEFBACBGJHIACBGHIACDEFBGJHIACDEFBACDEFBGJHIACDEFBGJHIACDEFBGJHACDEFBACDFBACDEFBACBGJHIACDEFBGHIACDEFBGJHIACDEFBGJHIACDFBACBGJHIACDEFBACDEFBGJHIACBGJHIACDEFBGJHIACDFBGHIACDEFBACBGJHACDFBGHIACDEFBGJHACBGJHIACBGHIACBGJHIACDEFBGJHACDEFBGHIACDEFBGHIACDEFBGJHIACBGJHIACDEFBGJHIACDEFBGJHIACBGJHIACDEFBGJHIACDEFBGJHIACBGHIACBGJHIACDEFBGJHIACBGHIACDEFBGJHIACDEFBGHIACDEFBACDEFBGJHIACBGHIACBGHIACBGHIACDEFBGJHACDFBGHIACDFBACDFBACBGJHIACBGJHIACBGJHIACDEFBGJHACDEFBGJHACDEFBGHIACBGHIACDEFBGJHIACDEFBACDFBGHIACBGHIACDEFBGJHACDEFBACBGJHIACDFBGHIACDEFBGJHIACDFBGHIACBGJHIACDEFBGJHIACDEFBGJHIACBGJHIACDFBACDEFBGJHIACDEFBGHIACDFBGHIACDFBGHIACDEFBGJHIACDEFBGJHIACBGJHACBGJHACDEFBGJHIACDFBACDFBGHIACBGJHIACBGHIACBGHIACDEFBACDEFBGJHIACBGJHACBGJHIACDFBGHIACDFBACBGJHIACBGHIACDEFBGJHIACBGJHIACDEFBACDEFBGJHIACDEFBGJHIACBGJHIACBGJHIACBGHIACDFBACDEFBGJHIACDEFBGJHIACDEFBGJHIACDEFBGJHIACDEFBACBGJHIACDEFBGJHIACBGJHIACBGJHIACDEFBGJHIACDEFBGJHACBGJHIACDEFBGJHIACBGHIACDEFBACDEFBGJHIACBGJHIACDEFBGJHACDEFBGJHIACDFBGHIACDEFBGJHIACDEFBGJHIACDEFBACDFBGHIACDEFBGJHIACBGJHIACDEFBGHIACDEFBGJHIACBGJHIACBGHIACDEFBGJHIACBGJHIACBGJHACDEFBGJHACDFBACDFBGHIACBGJHIACDEFBGJHIACDEFBGJHACDEFBGJHIACDEFBACBGJHIACBGHIACDEFBGJHIACDEFBGJHIACBGJHACBGJHACDEFBGJHIACDEFBGJHIACDEFBGJHIACDEFBGJHACDEFBACDEFBACDEFBGJHIACDFBGHIACBGHIACDEFBGJHIACBGHIACDEFBGJHIACBGHIACDFBGHIACDEFBGHIACDEFBGJHIACDEFBACDFBGHIACDEFBACBGJHACDEFBGJHIACBGHIACBGHIACDEFBGHIACBGHIACDEFBGJHIACBGJHIACDEFBGHIACBGJH==> passed

Test 6b: insert non-degenerate points; check range() with random query rectangles
         and check traversal of k-d tree
  * 3 random non-degenerate points and 1000 random rectangles in a 4-by-4 grid
random non-degenerate points and 1000 random rectangles in a 8-by-8 grid
random non-degenerate points and 1000 random rectangles in a 16-by-16 grid
  * 20 random non-degenerate points and 1000 random rectangles in a 32-by-32 grid
